/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c AccountAdaptor -a core/account_adaptor.h:core/account_adaptor.cpp org.saruneko.tori.account.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "core/account_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class AccountAdaptor
 */

AccountAdaptor::AccountAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

AccountAdaptor::~AccountAdaptor()
{
    // destructor
}

void AccountAdaptor::destroy(uint tweet_id, const QVariantMap &options)
{
    // handle method call com.saruneko.tori.Account.destroy
    QMetaObject::invokeMethod(parent(), "destroy", Q_ARG(uint, tweet_id), Q_ARG(QVariantMap, options));
}

void AccountAdaptor::retweet(uint tweet_id, const QVariantMap &options)
{
    // handle method call com.saruneko.tori.Account.retweet
    QMetaObject::invokeMethod(parent(), "retweet", Q_ARG(uint, tweet_id), Q_ARG(QVariantMap, options));
}

void AccountAdaptor::retweets(uint tweet_id, const QVariantMap &options)
{
    // handle method call com.saruneko.tori.Account.retweets
    QMetaObject::invokeMethod(parent(), "retweets", Q_ARG(uint, tweet_id), Q_ARG(QVariantMap, options));
}

void AccountAdaptor::show(uint tweet_id, const QVariantMap &options)
{
    // handle method call com.saruneko.tori.Account.show
    QMetaObject::invokeMethod(parent(), "show", Q_ARG(uint, tweet_id), Q_ARG(QVariantMap, options));
}

void AccountAdaptor::update(const QString &status, const QVariantMap &options)
{
    // handle method call com.saruneko.tori.Account.update
    QMetaObject::invokeMethod(parent(), "update", Q_ARG(QString, status), Q_ARG(QVariantMap, options));
}

